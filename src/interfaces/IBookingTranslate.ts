type ChildNoteT = {
  bold: string;
  content: string;
};

export interface IBookingTranslate {
  bookingTicket: string;
  aboutUs: string;
  change: string;
  timeStart: string;
  carType: string;
  rowSeats: string;
  floor: string;
  hours: string;
  luxuryCar: string;
  bed: string;
  empty: string;
  empty2: string;
  limousineCar: string;
  traditionalCar: string;
  selectRoute: string;
  departure: string;
  scheduleReturn: string;
  confirm: string;
  cancelApply: string;
  confirmCancel: string;
  contentCancel: string;
  return: string;
  price: string;
  cancel: string;
  apply: string;
  filter: string;
  clearFilter: string;
  emptyPick: string;
  picking: string;
  picked: string;
  downStairs: string;
  searchResult: string;
  upStairs: string;
  continue: string;
  pickPlace: string;
  dropPlace: string;
  pickingDecription1: string;
  pickingDecription2: string;
  pickingDecription3: string;
  goTicket: string;
  total: string;
  pickLocation: string;
  dropLocation: string;
  placeholderSearchLocation: string;
  seeLocation: string;
  expiredBookingDuration: string;
  suggestLogin: string;
  fullName: string;
  phone: string;
  email: string;
  privacyContent: string;
  notice: string;
  noticeDescription: string;
  informationGo: string;
  informationBack: string;
  routes: string;
  timeLeave: string;
  amountSeats: string;
  seats: string;
  totalPriceGo: string;
  detailPrice: string;
  priceTicket: string;
  priceTicket2: string;
  promotion: string;
  totalPrice: string;
  payment: string;
  exchangePoints: string;
  exchangePoints2: string;
  exchangePoints3: string;
  seeAll: string;
  yourPoints: string;
  voucher: string;
  exchangeNow: string;
  score: string;
  voucherDetail: string;
  schedule: string;
  HSD: string;
  days: string;
  conditionalApply: string;
  contentApply: string;
  exchange: string;
  close: string;
  exchangeSucess: string;
  filterText: string;
  still: string;
  resultNotFound: string;
  pleaseChangeTrip: string;
  pleaseNotFound: string;
  changeTrip: string;
  noteGoWithChild: string;
  applyforLimousine: string;
  childNoteList: ChildNoteT[];
  back: string;
  selectedSeat: string;
  paymentInformation: string;
  fullNameBookingPerson: string;
  informationCustomer: string;
  informationCustomerReverse: string;
  informationCustomerReverse2: string;
  optionnal: string;
  childrenSitSameChair: string;
  childrenSitSameChair2: string;
  noteWeightForChildren: string;
  informationChildren: string;
  informationChildrenReverse: string;
  informationChildrenReverse2: string;
  customerSitOn: string;
  useCustomerInformation: string;
  saveInformation: string;
  bornYear: string;
  phoneTitle: string;
  informationCustomerChildren: string;
  noteHeighWeightForChildren: string;
  childrenBelowWeightAndHeight: string;
  childrenBelowWeightAndHeight2: string;
  freeForChildrenWithAdult: string;
  extraFeesChildrenSitWithAdult: string;
  free: string;
  extraFee: string;
  pleaseArrivedAt: string;
  before: string;
  toTransferBeforeGettingOnBus: string;
  tempCalculate: string;
  seatLocation: string;
  totalCalculate: string;
  choosePickingLocation: string;
  extraFeeChildren: string;
  seatPrice: string;
  voucherList: string;
  youExchangeSuccess: string;
  get: string;
  confirmPayment: string;
  quickPaymentByQRCode: string;
  noteBanksNotSupportQR: string;
  pleaseCheckInformationBeforeTransfer: string;
  now: string;
  allVoucher: string;
  indentify: string;
  voucherApplyFrom: string;
  voucherApplyTo: string;
  earlyMorning: string;
  morning: string;
  afternoon: string;
  evening: string;
  above: string;
  below: string;
  chooseSeat: string;
  tripInfo: string;
  useBookingInfoForPassenger: string;
  enterLocationFrom: string;
  enterLocationTo: string;
  applyforTradition: string;
  childNoteTraditionList: any[];
  regulation: string;
  contentLuggage: string;
  regulationContentList: RegulationContentList[];
  policyOnChange: string;
  policyOnChangeList: PolicyOnChangeList[];
  policyOnOrther: string;
  policyOnOrtherList: PolicyOnOrtherList[];
}

export interface RegulationContentList {
  content: string;
}

export interface PolicyOnChangeList {
  content: string;
}

export interface PolicyOnOrtherList {
  content: string;
}
